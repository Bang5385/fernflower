public class TestSwitchPatternWithExpression {
   public static void main(String[] args) {
      new A("4265111111");// 15
   }// 16

   private static String getX(I i) {
      String var12;
      switch (i) {
         case A(String var10):
            var12 = var10;// 20
            break;
         case B(String var7):
            var12 = var7;// 21
            break;
      }

      return var12;// 19
   }

   private static String getX8(I i) {
      switch (i) {// 26
         case A(String var10):
            return var10;// 27 28
         case B(String var7):
            return var7;// 30 31
      }
   }

   private static String getX0(AA i) {
      String var18;
      switch (i) {
         case AA(A(String var14)):
            var18 = var14;
            break;// 38
         case AA(B(String var10)):
            var18 = var10;// 39
      }

      return var18;// 37
   }

   private static void getX11(AA i) {
      String var19;
      switch (i) {// 44
         case AA(A(String var15)):
            var19 = var15;// 45
            break;
         case AA(B(String var11)):
            var19 = var11;
      }

      String aa = var19;
      System.out.println(aa + "1");// 48
      return;// 46
   }

   private static String getX4(I i) {
      String var13;
      switch (i) {// 52
         case A(String var11):
            var13 = var11;// 53
            break;
         case B(String var8):
            var13 = var8;// 54
            break;
      }

      String string = var13;
      return string;// 56
   }

   private static void getX10(I i) {
      String var13;
      switch (i) {// 60
         case A(String var11):
            var13 = var11;// 61
            break;
         case B(String var8):
            var13 = var8;
            break;
      }

      String string = var13;
      System.out.println(string + "2");// 64
   }// 62

   private static String getX5(I i) {
      String var13;
      switch (i) {// 68
         case A(String var11):
            var13 = var11 + "1";// 69
            break;
         case B(String var8):
            var13 = var8;
            break;
      }

      String string = var13;// 70
      return string;// 72
   }

   private static void getX9(I i) {
      String var13;
      switch (i) {// 76
         case A(String var11):
            var13 = var11 + "1";// 77
            break;
         case B(String var8):
            var13 = var8;
            break;
      }

      String string = var13;
      System.out.println(string + "2");// 80
   }// 78

   private static String getX3(I i) {
      String var12;
      switch (i) {
         case A(String var10):
            System.out.println(var10);// 85 86
            var12 = var10;
            break;// 87
         case B(String var7):
            System.out.println(var7);// 89 90
            var12 = var7;
            break;
      }

      return var12;// 84
   }

   private static String getX6(I i) {
      String var12;
      switch (i) {
         case A(String var10):
            System.out.println(var10);// 99 100
            var12 = var10;
            break;// 101
         case B(String var7):
            System.out.println(var7);// 103 104
            var12 = var7 + "1";// 105
            break;
      }

      return var12;// 98
   }

   private static String getX7(I i) {
      String var12;
      switch (i) {
         case A(String var10):
            System.out.println(var10);// 112 113
            System.out.println(var10);// 114
            System.out.println(var10 + "1");// 115
            var12 = var10;
            break;// 116
         case B(String var7):
            System.out.println(var7);// 118 119
            var12 = var7 + "1";// 120
            break;
      }

      return var12;// 111
   }

   private static String getX2(I i) {
      switch (i) {// 126
         case A(String var10):
            return var10;// 127 128
         case B(String var7):
            return var7;// 129 130
         default:
            throw new IllegalArgumentException();// 132
      }
   }

   static record A(String a) implements I {
      A(String a) {
         this.a = a;
      }

      public String a() {
         return this.a;// 5
      }
   }

   static record B(String a) implements I {
      B(String a) {
         this.a = a;
      }

      public String a() {
         return this.a;// 8
      }
   }

   static record AA(I i) {
      AA(I i) {
         this.i = i;
      }

      public I i() {
         return this.i;// 11
      }
   }

   sealed interface I permits TestSwitchPatternWithExpression.A, TestSwitchPatternWithExpression.B {
   }
}

class 'TestSwitchPatternWithExpression' {
   method 'main ([Ljava/lang/String;)V' {
      4      2
      5      2
      a      3
   }

   method 'getX (LTestSwitchPatternWithExpression$I;)Ljava/lang/String;' {
      0      7
      10      7
      41      9
      42      9
      47      10
      57      12
      58      12
      5d      16
   }

   method 'getX8 (LTestSwitchPatternWithExpression$I;)Ljava/lang/String;' {
      0      20
      10      20
      41      22
      42      22
      47      22
      55      24
      56      24
      5b      24
   }

   method 'getX0 (LTestSwitchPatternWithExpression$AA;)Ljava/lang/String;' {
      0      30
      10      30
      6a      32
      6b      32
      70      33
      81      35
      82      35
      8f      38
   }

   method 'getX11 (LTestSwitchPatternWithExpression$AA;)V' {
      0      43
      10      43
      6e      45
      6f      45
      74      46
      85      48
      86      48
      93      51
      94      52
      95      52
      96      52
      97      52
      98      52
      99      52
      9a      52
      9b      52
      9c      52
      9d      52
      9e      52
      9f      52
      a0      53
      a1      53
      a2      53
      a3      53
      a4      53
      a5      53
      a6      53
      a7      53
      a8      53
      a9      53
      aa      53
      ab      53
      ac      53
      ad      53
      ae      53
      af      53
      b0      53
   }

   method 'getX4 (LTestSwitchPatternWithExpression$I;)Ljava/lang/String;' {
      0      58
      10      58
      43      60
      44      60
      49      61
      59      63
      5a      63
      5f      67
      60      68
      61      68
   }

   method 'getX10 (LTestSwitchPatternWithExpression$I;)V' {
      0      73
      10      73
      43      75
      44      75
      49      76
      59      78
      5a      78
      5f      82
      60      83
      61      83
      62      83
      63      83
      64      83
      65      83
      66      83
      67      83
      68      83
      69      83
      6a      83
      6b      83
      6c      84
      6d      84
      6e      84
      6f      84
      70      84
      71      84
      72      84
      73      84
      74      84
      75      84
      76      84
      77      84
      78      84
      79      84
      7a      84
      7b      84
      7c      84
   }

   method 'getX5 (LTestSwitchPatternWithExpression$I;)Ljava/lang/String;' {
      0      88
      10      88
      43      90
      44      90
      49      90
      4a      90
      4b      90
      4c      90
      4d      90
      4e      91
      5e      93
      5f      93
      64      97
      65      98
      66      98
   }

   method 'getX9 (LTestSwitchPatternWithExpression$I;)V' {
      0      103
      10      103
      43      105
      44      105
      49      105
      4a      105
      4b      105
      4c      105
      4d      105
      4e      106
      5e      108
      5f      108
      64      112
      65      113
      66      113
      67      113
      68      113
      69      113
      6a      113
      6b      113
      6c      113
      6d      113
      6e      113
      6f      113
      70      113
      71      114
      72      114
      73      114
      74      114
      75      114
      76      114
      77      114
      78      114
      79      114
      7a      114
      7b      114
      7c      114
      7d      114
      7e      114
      7f      114
      80      114
      81      114
   }

   method 'getX3 (LTestSwitchPatternWithExpression$I;)Ljava/lang/String;' {
      0      118
      10      118
      41      120
      42      120
      45      120
      46      120
      47      120
      4a      120
      4b      120
      4c      120
      4f      122
      5f      124
      60      124
      63      124
      64      124
      65      124
      68      124
      69      124
      6a      124
      6d      129
   }

   method 'getX6 (LTestSwitchPatternWithExpression$I;)Ljava/lang/String;' {
      0      134
      10      134
      41      136
      42      136
      45      136
      46      136
      47      136
      4a      136
      4b      136
      4c      136
      4f      138
      5f      140
      60      140
      63      140
      64      140
      65      140
      68      140
      69      140
      6a      140
      6d      141
      72      145
   }

   method 'getX7 (LTestSwitchPatternWithExpression$I;)Ljava/lang/String;' {
      0      150
      10      150
      41      152
      42      152
      45      152
      46      152
      47      152
      4a      152
      4b      152
      4c      152
      4d      153
      4e      153
      4f      153
      52      153
      53      153
      54      153
      55      154
      56      154
      57      154
      5a      154
      5b      154
      5c      154
      5d      154
      5e      154
      5f      154
      60      154
      61      154
      64      156
      74      158
      75      158
      78      158
      79      158
      7a      158
      7d      158
      7e      158
      7f      158
      82      159
      87      163
   }

   method 'getX2 (LTestSwitchPatternWithExpression$I;)Ljava/lang/String;' {
      0      167
      10      167
      37      169
      38      169
      3d      169
      4b      171
      4c      171
      51      171
      59      173
   }
}

class 'TestSwitchPatternWithExpression$A' {
   method '<init> (Ljava/lang/String;)V' {
      4      179
      5      179
      6      179
      7      179
      8      179
      9      180
   }

   method 'a ()Ljava/lang/String;' {
      0      183
      1      183
      2      183
      3      183
      4      183
   }
}

class 'TestSwitchPatternWithExpression$B' {
   method '<init> (Ljava/lang/String;)V' {
      4      189
      5      189
      6      189
      7      189
      8      189
      9      190
   }

   method 'a ()Ljava/lang/String;' {
      0      193
      1      193
      2      193
      3      193
      4      193
   }
}

class 'TestSwitchPatternWithExpression$AA' {
   method '<init> (LTestSwitchPatternWithExpression$I;)V' {
      4      199
      5      199
      6      199
      7      199
      8      199
      9      200
   }

   method 'i ()LTestSwitchPatternWithExpression$I;' {
      0      203
      1      203
      2      203
      3      203
      4      203
   }
}

Lines mapping:
5 <-> 184
8 <-> 194
11 <-> 204
15 <-> 3
16 <-> 4
19 <-> 17
20 <-> 10
21 <-> 13
26 <-> 21
27 <-> 23
28 <-> 23
30 <-> 25
31 <-> 25
37 <-> 39
38 <-> 34
39 <-> 36
44 <-> 44
45 <-> 46
46 <-> 54
48 <-> 53
52 <-> 59
53 <-> 61
54 <-> 64
56 <-> 69
60 <-> 74
61 <-> 76
62 <-> 85
64 <-> 84
68 <-> 89
69 <-> 91
70 <-> 98
72 <-> 99
76 <-> 104
77 <-> 106
78 <-> 115
80 <-> 114
84 <-> 130
85 <-> 121
86 <-> 121
87 <-> 123
89 <-> 125
90 <-> 125
98 <-> 146
99 <-> 137
100 <-> 137
101 <-> 139
103 <-> 141
104 <-> 141
105 <-> 142
111 <-> 164
112 <-> 153
113 <-> 153
114 <-> 154
115 <-> 155
116 <-> 157
118 <-> 159
119 <-> 159
120 <-> 160
126 <-> 168
127 <-> 170
128 <-> 170
129 <-> 172
130 <-> 172
132 <-> 174
Not mapped:
49
65
81
91
