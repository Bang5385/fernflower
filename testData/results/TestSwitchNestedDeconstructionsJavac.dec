package pkg;

import java.util.Objects;

public class TestSwitchNestedDeconstructionsJavac {
   public static void main(String[] args) {
   }// 6

   public static void testNestedSwitches(Object o) {
      switch (o) {// 14
         case R2(String s, String s2) when s.length() > 123456789:// 15
            if (s.length() == 2) {// 16
               System.out.println(o);// 17
            }

            return;// 42
         case R2(String s, String s2) when s.length() > 2:// 20
            if (s.length() == 2) {// 21
               System.out.println(o);// 22
            }

            return;
         case R2(String s, Object var29) when s.length() > 45:// 25
            if (s.length() == 2) {// 26
               System.out.println(o);// 27
            }

            return;
         case R2(Object var19, Object var28) when var19.hashCode() > 7:// 30
            if (var19.hashCode() == 2) {// 31
               System.out.println(o);// 32
            }

            return;
         case R2(Object ob, Object var30):
            if (ob.hashCode() == 2) {// 35 36
               System.out.println(o);// 37
            }

            return;
         default:
            System.out.println(o);// 40
            return;
      }
   }

   public static void testStringString(Object o) {
      switch (o) {// 45
         case R2(String s1, String s2):
            if (s2.isEmpty()) {// 47
               System.out.println("3");// 48
            }
            break;
         default:
            System.out.println("3");// 51
            break;
      }

      System.out.println("1");// 53
   }// 46

   public static void testNestedLevel2(Object o) {
      switch (o) {// 57
         case R2(String s, String s2) when s2.length() > 11:// 58
            if (s.length() == 9) {// 59
               System.out.println(o);// 60
            }

            return;// 70
         case R2(Object ob, R1(String s2)) when s2.length() > 7:
            if (ob.hashCode() == 2) {// 63 64
               System.out.println(o);// 65
            }

            return;
         default:
            System.out.println(o);// 68
            return;
      }
   }

   public static void testNumberString(Object o) {
      switch (o) {// 73
         case R2(String s, String s2) when s2.length() > 10:// 74
            if (s.length() == 9) {// 75
               System.out.println(o);// 76
            }

            return;// 91
         case R2(Number s, String s2) when s2.length() > 9:// 79
            if (s.hashCode() == 9) {// 80
               System.out.println(o);// 81
            }

            return;
         case R2(String s, Object var24) when s.length() > 7:// 84
            if (s.length() == 2) {// 85
               System.out.println(o);// 86
            }

            return;
         default:
            System.out.println(o);// 89
            return;
      }
   }

   public static void test2DeepDeconstruction(Object o) {
      switch (o) {// 94
         case R1(R1(String s)) when s.hashCode() == 5 -> System.out.println("123456789");// 95 96
         case R1(String s) when s.hashCode() == 3 -> System.out.println("3");// 98 99
         default -> System.out.println("3");
      }

      System.out.println("1");// 103
   }// 101

   public static void testDoubleLongCase(Object o) {
      switch (o) {// 107
         case R2(String s, String s2) when s.length() > 3:// 108
            if (s.length() == 2) {// 109
               System.out.println(o);// 110
            }
            break;
         case R2(String s, String s2) when s.length() > 4:// 113
            if (s.length() == 2) {// 114
               System.out.println(o);// 115
            }
            break;
         case R2(String s, Object var54) when s.length() > 3:// 118
            if (s.length() == 2) {// 119
               System.out.println(o);// 120
            }
            break;
         case R2(Object var30, Object var53) when var30.hashCode() > 3:// 123
            if (var30.hashCode() == 2) {// 124
               System.out.println(o);// 125
            }
            break;
         case R2(Object ob, Object var55):
            if (ob.hashCode() == 2) {// 128 129
               System.out.println(o);// 130
            }
            break;
         default:
            System.out.println(o);// 133
            break;
      }

      switch (o) {// 136
         case R2(String var27, String var28) when s.length() > 3:// 137
            if (s.length() == 2) {// 138
               System.out.println(o);// 139
            }

            return;// 164
         case R2(String var27, String var29) when s.length() > 4:// 142
            if (s.length() == 2) {// 143
               System.out.println(o);// 144
            }

            return;
         case R2(String var27, Object var58) when s.length() > 3:// 147
            if (s.length() == 2) {// 148
               System.out.println(o);// 149
            }

            return;
         case R2(Object var32, Object var57) when var32.hashCode() > 3:// 152
            if (var32.hashCode() == 2) {// 153
               System.out.println(o);// 154
            }

            return;
         case R2(Object var36, Object var59):
            if (var36.hashCode() == 2) {// 157 158
               System.out.println(o);// 159
            }

            return;
         default:
            System.out.println(o);// 162
            return;
      }
   }

   public static void testTryWithDoubleDo(Object o, Object o2) {
      try {
         System.out.println("1");// 168
      } catch (Exception var16) {// 169
         Objects.requireNonNull(o2);// 170
         Object var3 = o2;
         byte var4 = 0;

         label64:
         while(true) {
            //$FF: var4->value
            //0->pkg/TestSwitchNestedDeconstructionsJavac$R2
            //1->java/lang/Object
            switch (((Class)var3).typeSwitch<invokedynamic>(var3, var4)) {
               case 0:
                  R2 var5 = (R2)var3;
                  R2 var10000 = var5;

                  try {
                     var18 = var10000.o();
                  } catch (Throwable var15) {// 177
                     throw new MatchException(var15.toString(), var15);
                  }

                  Object ob = var18;
                  byte var11 = 0;

                  while(true) {
                     //$FF: var11->value
                     //0->java/lang/Number
                     //1->java/lang/String
                     switch (((Class)ob).typeSwitch<invokedynamic>(ob, var11)) {
                        case -1:
                        default:
                           var4 = 1;
                           continue label64;
                        case 0:
                           Number s = (Number)ob;// 171
                           var10000 = var5;

                           try {
                              var22 = var10000.o2();
                           } catch (Throwable var13) {
                              throw new MatchException(var13.toString(), var13);
                           }

                           Object var17 = var22;
                           if (var17 instanceof String s2) {
                              System.out.println("10");// 172
                              return;// 180
                           }

                           var11 = 1;
                           continue;
                        case 1:
                     }

                     String s = (String)ob;// 174
                     var10000 = var5;

                     try {
                        var20 = var10000.o2();
                     } catch (Throwable var14) {
                        throw new MatchException(var14.toString(), var14);
                     }

                     Object var12 = var20;
                     if (var12 instanceof Number s2) {
                        System.out.println(o);// 175
                        return;
                     }

                     var11 = 2;
                  }
               default:
                  System.out.println(o);
                  return;
            }
         }
      }

   }

   static record R1(Object o) {
      R1(Object o) {
         this.o = o;
      }

      public Object o() {
         return this.o;// 8
      }
   }

   static record R2(Object o, Object o2) {
      R2(Object o, Object o2) {
         this.o = o;
         this.o2 = o2;
      }

      public Object o() {
         return this.o;
      }

      public Object o2() {
         return this.o2;// 183
      }
   }
}

class 'pkg/TestSwitchNestedDeconstructionsJavac' {
   method 'main ([Ljava/lang/String;)V' {
      0      6
   }

   method 'testNestedSwitches (Ljava/lang/Object;)V' {
      0      9
      10      9
      9b      10
      9c      10
      9d      10
      9e      10
      9f      10
      a0      10
      a1      10
      a2      10
      ab      11
      ac      11
      ad      11
      ae      11
      af      11
      b0      11
      b1      11
      b4      12
      b5      12
      b6      12
      b7      12
      b8      12
      b9      12
      ba      12
      c5      16
      c6      16
      c7      16
      c8      16
      c9      16
      ca      16
      cb      16
      d4      17
      d5      17
      d6      17
      d7      17
      d8      17
      d9      17
      da      17
      dd      18
      de      18
      df      18
      e0      18
      e1      18
      e2      18
      e3      18
      eb      22
      ec      22
      ed      22
      ee      22
      ef      22
      f0      22
      f1      22
      f2      22
      fb      23
      fc      23
      fd      23
      fe      23
      ff      23
      100      23
      101      23
      104      24
      105      24
      106      24
      107      24
      108      24
      109      24
      10a      24
      114      28
      115      28
      124      28
      125      28
      126      28
      127      28
      128      28
      129      28
      134      29
      135      29
      136      29
      137      29
      138      29
      13b      30
      13c      30
      13d      30
      13e      30
      13f      30
      140      30
      141      30
      157      35
      158      35
      168      35
      169      35
      16a      35
      16b      35
      16c      35
      16f      36
      170      36
      171      36
      172      36
      173      36
      174      36
      175      36
      17c      41
      17d      41
      17e      41
      17f      41
      180      41
      181      41
      182      41
      197      15
   }

   method 'testStringString (Ljava/lang/Object;)V' {
      0      47
      10      47
      53      49
      54      49
      55      49
      56      49
      57      49
      58      49
      59      49
      5a      49
      5b      49
      5c      49
      5d      49
      5e      49
      5f      49
      63      50
      64      50
      65      50
      66      50
      67      50
      68      50
      69      50
      6a      50
      6e      54
      6f      54
      70      54
      71      54
      72      54
      73      54
      74      54
      75      54
      76      55
      79      58
      7a      58
      7b      58
      7c      58
      7d      58
      7e      58
      7f      58
      80      58
      81      59
      82      59
      83      59
      84      59
      85      59
      86      59
      87      59
      88      59
      89      59
      8a      59
      8b      59
      8c      59
      8d      59
      8e      59
      8f      59
      90      59
      91      59
   }

   method 'testNestedLevel2 (Ljava/lang/Object;)V' {
      0      62
      10      62
      70      63
      71      63
      72      63
      73      63
      74      63
      75      63
      76      63
      77      63
      80      64
      81      64
      82      64
      83      64
      84      64
      85      64
      86      64
      87      64
      8a      65
      8b      65
      8c      65
      8d      65
      8e      65
      8f      65
      90      65
      94      70
      95      70
      c3      69
      c4      69
      c5      69
      c6      69
      c7      69
      c8      69
      c9      69
      ca      69
      d5      70
      d6      70
      d7      70
      d8      70
      d9      70
      dc      71
      dd      71
      de      71
      df      71
      e0      71
      e1      71
      e2      71
      ee      76
      ef      76
      f0      76
      f1      76
      f2      76
      f3      76
      f4      76
      109      68
   }

   method 'testNumberString (Ljava/lang/Object;)V' {
      0      82
      10      82
      74      83
      75      83
      76      83
      77      83
      78      83
      79      83
      7a      83
      7b      83
      84      84
      85      84
      86      84
      87      84
      88      84
      89      84
      8a      84
      8b      84
      8e      85
      8f      85
      90      85
      91      85
      92      85
      93      85
      94      85
      b4      89
      b5      89
      b6      89
      b7      89
      b8      89
      b9      89
      ba      89
      bb      89
      c4      90
      c5      90
      c6      90
      c7      90
      c8      90
      c9      90
      ca      90
      cb      90
      ce      91
      cf      91
      d0      91
      d1      91
      d2      91
      d3      91
      d4      91
      e9      95
      ea      95
      eb      95
      ec      95
      ed      95
      ee      95
      ef      95
      f0      95
      f9      96
      fa      96
      fb      96
      fc      96
      fd      96
      fe      96
      ff      96
      102      97
      103      97
      104      97
      105      97
      106      97
      107      97
      108      97
      114      102
      115      102
      116      102
      117      102
      118      102
      119      102
      11a      102
      12f      88
   }

   method 'test2DeepDeconstruction (Ljava/lang/Object;)V' {
      0      108
      10      108
      71      109
      72      109
      73      109
      74      109
      75      109
      76      109
      77      109
      80      109
      81      109
      82      109
      83      109
      84      109
      85      109
      86      109
      87      109
      92      110
      93      110
      94      110
      95      110
      96      110
      97      110
      98      110
      a1      110
      a2      110
      a3      110
      a4      110
      a5      110
      a6      110
      a7      110
      a8      110
      b1      111
      b2      111
      b3      111
      b4      111
      b5      111
      b6      111
      b7      111
      b8      111
      bc      114
      bd      114
      be      114
      bf      114
      c0      114
      c1      114
      c2      114
      c3      114
      c4      115
      c5      115
      c6      115
      c7      115
      c8      115
      c9      115
      ca      115
      cb      115
      cc      115
      cd      115
      ce      115
      cf      115
      d0      115
      d1      115
      d2      115
      d3      115
      d4      115
   }

   method 'testDoubleLongCase (Ljava/lang/Object;)V' {
      0      118
      10      118
      9b      119
      9c      119
      9d      119
      9e      119
      9f      119
      a0      119
      a1      119
      aa      120
      ab      120
      ac      120
      ad      120
      ae      120
      af      120
      b0      120
      b3      121
      b4      121
      b5      121
      b6      121
      b7      121
      b8      121
      b9      121
      c4      124
      c5      124
      c6      124
      c7      124
      c8      124
      c9      124
      ca      124
      d3      125
      d4      125
      d5      125
      d6      125
      d7      125
      d8      125
      d9      125
      dc      126
      dd      126
      de      126
      df      126
      e0      126
      e1      126
      e2      126
      ea      129
      eb      129
      ec      129
      ed      129
      ee      129
      ef      129
      f0      129
      f9      130
      fa      130
      fb      130
      fc      130
      fd      130
      fe      130
      ff      130
      102      131
      103      131
      104      131
      105      131
      106      131
      107      131
      108      131
      112      134
      113      134
      122      134
      123      134
      124      134
      125      134
      126      134
      131      135
      132      135
      133      135
      134      135
      135      135
      138      136
      139      136
      13a      136
      13b      136
      13c      136
      13d      136
      13e      136
      154      140
      155      140
      165      140
      166      140
      167      140
      168      140
      169      140
      16c      141
      16d      141
      16e      141
      16f      141
      170      141
      171      141
      172      141
      179      145
      17a      145
      17b      145
      17c      145
      17d      145
      17e      145
      17f      145
      180      146
      183      149
      193      149
      21b      150
      21c      150
      21d      150
      21e      150
      21f      150
      220      150
      221      150
      22a      151
      22b      151
      22c      151
      22d      151
      22e      151
      22f      151
      230      151
      233      152
      234      152
      235      152
      236      152
      237      152
      238      152
      239      152
      244      156
      245      156
      246      156
      247      156
      248      156
      249      156
      24a      156
      253      157
      254      157
      255      157
      256      157
      257      157
      258      157
      259      157
      25c      158
      25d      158
      25e      158
      25f      158
      260      158
      261      158
      262      158
      26a      162
      26b      162
      26c      162
      26d      162
      26e      162
      26f      162
      270      162
      279      163
      27a      163
      27b      163
      27c      163
      27d      163
      27e      163
      27f      163
      282      164
      283      164
      284      164
      285      164
      286      164
      287      164
      288      164
      292      168
      293      168
      2a2      168
      2a3      168
      2a4      168
      2a5      168
      2a6      168
      2b1      169
      2b2      169
      2b3      169
      2b4      169
      2b5      169
      2b8      170
      2b9      170
      2ba      170
      2bb      170
      2bc      170
      2bd      170
      2be      170
      2d4      175
      2d5      175
      2e5      175
      2e6      175
      2e7      175
      2e8      175
      2e9      175
      2ec      176
      2ed      176
      2ee      176
      2ef      176
      2f0      176
      2f1      176
      2f2      176
      2f9      181
      2fa      181
      2fb      181
      2fc      181
      2fd      181
      2fe      181
      2ff      181
      314      155
   }

   method 'testTryWithDoubleDo (Ljava/lang/Object;Ljava/lang/Object;)V' {
      0      188
      1      188
      2      188
      3      188
      4      188
      5      188
      b      189
      c      190
      e      190
      f      190
      10      190
      12      191
      13      192
      14      192
      15      192
      16      199
      17      196
      18      196
      19      199
      1a      199
      1b      199
      1c      199
      1d      199
      1e      196
      30      201
      31      201
      32      201
      33      201
      34      201
      35      201
      36      202
      38      205
      3b      210
      3c      210
      3d      211
      3e      211
      3f      211
      40      217
      41      217
      42      214
      43      214
      44      217
      45      217
      46      217
      47      217
      48      217
      49      214
      64      223
      65      223
      66      223
      67      223
      68      223
      69      223
      6a      223
      6b      224
      6d      227
      70      232
      71      232
      72      233
      73      233
      74      233
      75      233
      76      233
      77      233
      7f      233
      80      233
      81      234
      82      234
      83      234
      84      234
      85      234
      86      234
      87      234
      88      234
      89      234
      8a      234
      8b      234
      8c      234
      8d      234
      8e      234
      95      243
      96      243
      97      243
      98      243
      99      243
      9a      243
      9b      243
      9c      244
      9e      247
      a1      252
      a2      252
      a3      253
      a4      253
      a5      253
      a6      253
      a7      253
      a8      253
      b0      253
      b1      253
      b2      254
      b3      254
      b4      254
      b5      254
      b6      254
      b7      254
      b8      254
      b9      254
      ba      254
      bb      254
      bc      254
      bd      254
      be      254
      c5      220
      c6      220
      c7      220
      c8      221
      ce      261
      cf      261
      d0      261
      d1      261
      d2      261
      d3      261
      d4      261
      db      206
      e1      207
      e2      207
      e3      207
      e8      207
      e9      235
   }
}

class 'pkg/TestSwitchNestedDeconstructionsJavac$R1' {
   method '<init> (Ljava/lang/Object;)V' {
      4      271
      5      271
      6      271
      7      271
      8      271
      9      272
   }

   method 'o ()Ljava/lang/Object;' {
      0      275
      1      275
      2      275
      3      275
      4      275
   }
}

class 'pkg/TestSwitchNestedDeconstructionsJavac$R2' {
   method '<init> (Ljava/lang/Object;Ljava/lang/Object;)V' {
      4      281
      5      281
      6      281
      7      281
      8      281
      9      282
      a      282
      b      282
      c      282
      d      282
      e      283
   }

   method 'o ()Ljava/lang/Object;' {
      0      286
      1      286
      2      286
      3      286
      4      286
   }

   method 'o2 ()Ljava/lang/Object;' {
      0      290
      1      290
      2      290
      3      290
      4      290
   }
}

Lines mapping:
6 <-> 7
8 <-> 276
14 <-> 10
15 <-> 11
16 <-> 12
17 <-> 13
20 <-> 17
21 <-> 18
22 <-> 19
25 <-> 23
26 <-> 24
27 <-> 25
30 <-> 29
31 <-> 30
32 <-> 31
35 <-> 36
36 <-> 36
37 <-> 37
40 <-> 42
42 <-> 16
45 <-> 48
46 <-> 60
47 <-> 50
48 <-> 51
51 <-> 55
53 <-> 59
57 <-> 63
58 <-> 64
59 <-> 65
60 <-> 66
63 <-> 71
64 <-> 71
65 <-> 72
68 <-> 77
70 <-> 69
73 <-> 83
74 <-> 84
75 <-> 85
76 <-> 86
79 <-> 90
80 <-> 91
81 <-> 92
84 <-> 96
85 <-> 97
86 <-> 98
89 <-> 103
91 <-> 89
94 <-> 109
95 <-> 110
96 <-> 110
98 <-> 111
99 <-> 111
101 <-> 116
103 <-> 115
107 <-> 119
108 <-> 120
109 <-> 121
110 <-> 122
113 <-> 125
114 <-> 126
115 <-> 127
118 <-> 130
119 <-> 131
120 <-> 132
123 <-> 135
124 <-> 136
125 <-> 137
128 <-> 141
129 <-> 141
130 <-> 142
133 <-> 146
136 <-> 150
137 <-> 151
138 <-> 152
139 <-> 153
142 <-> 157
143 <-> 158
144 <-> 159
147 <-> 163
148 <-> 164
149 <-> 165
152 <-> 169
153 <-> 170
154 <-> 171
157 <-> 176
158 <-> 176
159 <-> 177
162 <-> 182
164 <-> 156
168 <-> 189
169 <-> 190
170 <-> 191
171 <-> 224
172 <-> 235
174 <-> 244
175 <-> 255
177 <-> 207
180 <-> 236
183 <-> 291
Not mapped:
54
97
100
104
173
176
179
